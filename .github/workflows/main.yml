# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  - job: tests
    displayName: Run tests
    strategy:
      maxParallel: 2
      matrix:
        REMOTE_SERVER:
          isRemote: true
        LOCAL_SERVER:
          isRemote: false

    variables:
      ANDROID_EMU_NAME: test
      ANDROID_SDK_ID: system-images;android-28;google_apis_playstore;x86
      XCODE_VERSION: 10.2
      IOS_PLATFORM_VERSION: 12.2
      IOS_DEVICE_NAME: iPhone X

    steps:
      - task: CmdLine@2
        displayName: 'Configure Appium and Android SDK'
        inputs:
          script: |
            echo "Configuring Environment"
            export PATH=$PATH:$JAVA_HOME/bin
            echo export "ANDROID_HOME=\$ANDROID_HOME" >> ~/.bash_profile
            export PATH=$PATH:$ANDROID_HOME
            echo "ANDROID_HOME: ${ANDROID_HOME}"
            echo "JAVA_HOME: ${JAVA_HOME}"
            echo "PATH: ${PATH}"
            echo "y" | $ANDROID_HOME/tools/bin/sdkmanager "$(ANDROID_SDK_ID)"
            echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n "$(ANDROID_EMU_NAME)" -k "$(ANDROID_SDK_ID)" -f
            $ANDROID_HOME/emulator/emulator -list-avds
            echo "Starting emulator"
            nohup $ANDROID_HOME/emulator/emulator -avd "$(ANDROID_EMU_NAME)" -no-snapshot > /dev/null 2>&1 &
            $ANDROID_HOME/platform-tools/adb wait-for-device
            while [[ $? -ne 0 ]]; do sleep 1; $ANDROID_HOME/platform-tools/adb shell pm list packages; done;
            $ANDROID_HOME/platform-tools/adb devices
            echo "Emulator started"
            echo "Installing Appium"
            npm install -g appium@v1.17.0
            ln -fs /usr/local/lib/node_modules/appium/build/lib/main.js /usr/local/bin/appium
            chmod +x /usr/local/bin/appium
            export PATH=$PATH:/usr/local/bin/appium
            appium --version
            echo "Appium installed"
            echo "Installing and Running Appium doctor"
            npm install -g request@2.34.0
            npm install -g appium-doctor@1.15.1
            ln -fs /usr/local/lib/node_modules/appium-doctor/appium-doctor.js /usr/local/bin/appium-doctor
            chmod +x /usr/local/bin/appium-doctor
            export PATH=$PATH:/usr/local/bin/appium-doctor
            appium-doctor
            echo "Appium doctor installed and executed"
            #sudo xcode-select -s /Applications/Xcode_$(XCODE_VERSION).app/Contents/Developer
            #xcrun simctl list
      - task: CmdLine@2
        displayName: 'Start Appium server'
        inputs:
          script: |
            appium --allow-insecure chromedriver_autodownload &
            echo "Appium server started"
