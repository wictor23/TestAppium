name: Android CI/CD

on:
  push:
    branches: [ dev, master ]
  pull_request:
    branches: [ dev, master ]

jobs:
  test:
    runs-on: macOS-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: run tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        script: ./gradlew connectedCheck
    - name: Install depedencies
      run: |
        adb devices

  # OfertaPlayMacOs:
  #     runs-on: macOS-latest
  #     steps:
  #       - uses: actions/checkout@v2
  #       - name: Set up Node JS 12
  #         uses: actions/setup-node@v1
  #         with:
  #           node-version: '12.19.0'
  #       - name: Install depedencies
  #         run: |
  #           sudo npm install react-native-cli -g
  #           npm install
  #       - name: Run Android Emulator
  #         run: |
  #           echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-28;google_apis;x86_64'
  #           echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n test_device -k 'system-images;android-28;google_apis;x86_64' --force
  #           echo $ANDROID_HOME/emulator/emulator -list-avds
  #           echo "Starting emulator"
  #           nohup $ANDROID_HOME/emulator/emulator -avd test_device -no-snapshot > /dev/null 2>&1 &
  #           $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
  #           $ANDROID_HOME/platform-tools/adb devices
  #           echo "Emulator started"
  #       - name: Start the Appium Server
  #         run: $(npm bin)/appium --log-timestamp --log-no-colors --allow-insecure chromedriver_autodownload > appium.log &
  #       - name: Poll for Appium Server to Start
  #         run: |
  #           until $(curl --output /dev/null --silent --head --fail http://127.0.0.1:4723/wd/hub/sessions); do
  #             sleep 5
  #           done
  #       - name: Open Metro Bundler in Background
  #         run: |
  #           node_modules/react-native/scripts/launchPackager.command &
  #       - name: Build Android App and Run Tests
  #         env:
  #           E2E_TEST_PLATFORM: 'android'
  #           E2E_TEST_DEFAULTS: 'true'
  #           E2E_TEST_TAGS: 'E2E'
  #         run: |
  #           npm run android:release
  #           sleep 15
  #       - name: Upload Appium logs
  #         uses: actions/upload-artifact@v1
  #         with:
  #           name: appium.log
  #           path: appium.log
  #       - name: Upload Test Results
  #         uses: actions/upload-artifact@v1
  #         with:
  #           name: e2e-results
  #           path: __tests__/e2e/output


#   OfertaPlayUbuntuManual:
#     runs-on: macos-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: Set up Node JS 12
#         uses: actions/setup-node@v1
#         with:
#           node-version: '12.19.0'
#       - name: Install depedencies
#         run: |
#           sudo npm install react-native-cli -g
#           npm install
#       - name: Run Android Emulator
#         run: |
#           echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-28;google_apis;x86_64'
#           echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n test_device -k 'system-images;android-28;google_apis;x86_64' --force
#           echo $ANDROID_HOME/emulator/emulator -list-avds
#           echo "Starting emulator"
#           nohup $ANDROID_HOME/emulator/emulator -avd test_device -no-snapshot > /dev/null 2>&1 &
#           $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
#           $ANDROID_HOME/platform-tools/adb devices
#           echo "Emulator started"
#       - name: Start the Appium Server
#         run: $(npm bin)/appium --log-timestamp --log-no-colors --allow-insecure chromedriver_autodownload > appium.log &
#       - name: Poll for Appium Server to Start
#         run: |
#           until $(curl --output /dev/null --silent --head --fail http://127.0.0.1:4723/wd/hub/sessions); do
#             sleep 5
#           done
#       - name: Open Metro Bundler in Background
#         run: |
#           node_modules/react-native/scripts/launchPackager.command &
#       - name: Build Android And Install App
#         env:
#           E2E_TEST_PLATFORM: 'android'
#           E2E_TEST_DEFAULTS: 'true'
#           E2E_TEST_TAGS: 'E2E'
#         run: |
#           npm run android:release

      
#       - name: Test Runner
#         uses: actions/setup-node@v1
#           sleep 15
#           cd TestAppOferta/
#           mvn test
          
      
#       - name: Upload Imagens
#         uses: actions/checkout@v2
#       - uses: actions/upload-artifact@v2
#         with:
#           name: Result Test
#           path: TestAppOferta/src/test/java/Testes/imagens/*
          
        
#       - name: Download Imagens
#         uses: actions/checkout@v2
#       - uses: actions/download-artifact@v2
        
#         with:
#           name: Result Test
#           run: ls -R
